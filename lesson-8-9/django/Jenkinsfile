pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: jenkins-kaniko
spec:
  serviceAccountName: jenkins-sa
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:v1.16.0-debug
    imagePullPolicy: Always
    command:
    - sleep
    args:
    - 99d
  - name: git
    image: alpine/git
    command: ["cat"]
    tty: true
"""
    }
  }

  environment {
    ECR_REGISTRY = "349298600530.dkr.ecr.ap-southeast-2.amazonaws.com"
    IMAGE_NAME   = "ecr-repo-349298600530"
    IMAGE_TAG    = "v1.0.${BUILD_NUMBER}"

    COMMIT_EMAIL = "jenkins@localhost"
    COMMIT_NAME  = "jenkins"
  }

  stages {

    stage('Build & Push Docker Image') {
      steps {
        container('kaniko') {
          dir('lesson-8-9/Django') {
            sh 'ls -l Dockerfile' // Перевірка наявності Dockerfile

            sh '''
              /kaniko/executor \
                --context . \
                --dockerfile Dockerfile \
                --destination=$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG \
                --cache=true \
                --insecure \
                --skip-tls-verify
            '''
          }
        }
      }
    }

    stage('Update Chart Tag in Git') {
      steps {
        container('git') {
          withCredentials([usernamePassword(credentialsId: 'github-token', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PAT')]) {
            sh '''
              git clone https://${GIT_USERNAME}:${GIT_PAT}@github.com/igorivnaolga/my-microservice-project.git -b lesson-8-9
              cd my-microservice-project
              git checkout cd || git checkout -b cd
              cd charts/django-app

              sed -i "s/tag: .*/tag: ${IMAGE_TAG}/" values.yaml

              git config user.email "${COMMIT_EMAIL}"
              git config user.name "${COMMIT_NAME}"

              git add values.yaml
              git commit -m "Update image tag to ${IMAGE_TAG}"
              git push -f origin cd
            '''
          }
        }
      }
    }

  }
}
